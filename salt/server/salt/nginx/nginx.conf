# This file is managed using saltstack
{% if grains['virtual'] == "VirtualBox" %}user vagrant;
{% else %}user www-data;{% endif %}

# Set to the number of CPUs (cores) or "auto" to let nginx figure it out
worker_processes  auto;

#

# This should be less than the Kernel's fs-max.
worker_rlimit_nofile 100000;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
   # Use if you're using Kernel >= 2.6
    use epoll;

# max clients = worker_processes (CPUs) * worker_connections
    # worker_connections * worker_processes should be less than half worker_rlimit_nofile
    # This example is for a single core box
    worker_connections 40000;

    multi_accept on; #ensure that the workers accept multiple connections at one time
}

# The HttpCoreModule controls core features of Nginx's HTTP processing
http {
    server_tokens off;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;
    map_hash_bucket_size  64;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Default log file
    #access_log  /var/log/nginx/access.log main;

    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    fastcgi_send_timeout 600s;

    {% if grains['virtual'] == "VirtualBox" %}
    sendfile       off;
    {% else %}
    sendfile       on;
    {% endif %}

    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_disable "msie6";
    # Compression level (1-9)
    gzip_comp_level     5;

    # Don't compress anything under 256 bytes
    gzip_min_length     256;

# Compress output of these MIME-types
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/rss+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-javascript
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/svg+xml
        image/x-icon
        text/css
        text/plain
        text/x-component;

    # Disable gzip for bad browsers
    gzip_disable  "MSIE [1-6]\.(?!.*SV1)";

    #pagespeed on;
    #pagespeed FileCachePath /var/ngx_pagespeed_cache;  # Use tmpfs for best results.



    # Upstream to abstract backend connection(s) for PHP.
    upstream php {
           server unix:/var/run/php5-fpm.sock;
    }


    # If the requested body size is more than the buffer size, the entire body is
    # written to a temporary file. Default is 8k or 16k depending on the platform.
    #client_body_buffer_size 16k;

    # If a request line or header field does not fit into this buffer, then larger
    # buffers via large_client_header_buffers are allocated
    client_header_buffer_size 1k;

    # Max size of a body to allow. This affects uploads, but can be overwritten at
    # the individual site level
    #client_max_body_size 50M;

    client_max_body_size 50M;
    client_body_buffer_size 128k;



    # The maximum number and size of large headers to accept from a client
    large_client_header_buffers 4 16k;


    charset utf-8; # Specify a charset

    #add support for webDAV request methods
    #dav_methods PUT DELETE;

    #put in security parts
    #include /etc/nginx/general-security.conf;


    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
